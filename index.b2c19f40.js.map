{"mappings":"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","sources":["<anon>","script.js","ground.js","updateCustomProperty.js","dino.js","cactus.js","leleka.js"],"sourcesContent":["function $519cb4c390022dfc$export$e5f48de68210dc65(elem, prop) {\n    return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0;\n}\nfunction $519cb4c390022dfc$export$e03ca791698dd2c(elem, prop, value) {\n    elem.style.setProperty(prop, value);\n}\nfunction $519cb4c390022dfc$export$f4266cf9df6b525c(elem, prop, inc) {\n    $519cb4c390022dfc$export$e03ca791698dd2c(elem, prop, $519cb4c390022dfc$export$e5f48de68210dc65(elem, prop) + inc);\n}\n\n\nconst $c37474b915fc53e3$var$SPEED = 0.05;\nconst $c37474b915fc53e3$var$groundElems = document.querySelectorAll(\"[data-ground]\");\nfunction $c37474b915fc53e3$export$62c7cf436fdb9795() {\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)($c37474b915fc53e3$var$groundElems[0], \"--left\", 0);\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)($c37474b915fc53e3$var$groundElems[1], \"--left\", 300);\n}\nfunction $c37474b915fc53e3$export$1fc9a0611b84a598(delta, speedScale) {\n    $c37474b915fc53e3$var$groundElems.forEach((ground)=>{\n        (0, $519cb4c390022dfc$export$f4266cf9df6b525c)(ground, \"--left\", delta * speedScale * $c37474b915fc53e3$var$SPEED * -1);\n        if ((0, $519cb4c390022dfc$export$e5f48de68210dc65)(ground, \"--left\") <= -300) (0, $519cb4c390022dfc$export$f4266cf9df6b525c)(ground, \"--left\", 600);\n    });\n}\n\n\n\nconst $feaabd4d71c4e325$var$dinoElem = document.querySelector(\"[data-dino]\");\nconst $feaabd4d71c4e325$var$JUMP_SPEED = 0.45;\nconst $feaabd4d71c4e325$var$GRAVITY = 0.0015;\nconst $feaabd4d71c4e325$var$DINO_FRAME_COUNT = 2;\nconst $feaabd4d71c4e325$var$FRAME_TIME = 100;\nlet $feaabd4d71c4e325$var$isJumping;\nlet $feaabd4d71c4e325$var$dinoFrame;\nlet $feaabd4d71c4e325$var$currentFrameTime;\nlet $feaabd4d71c4e325$var$yVelocity;\nfunction $feaabd4d71c4e325$export$8ddafcef54881f96() {\n    $feaabd4d71c4e325$var$isJumping = false;\n    $feaabd4d71c4e325$var$dinoFrame = 0;\n    $feaabd4d71c4e325$var$currentFrameTime = 0;\n    $feaabd4d71c4e325$var$yVelocity = 0;\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)($feaabd4d71c4e325$var$dinoElem, \"--bottom\", 0);\n    document.removeEventListener(\"keydown\", $feaabd4d71c4e325$var$onJump);\n    document.removeEventListener(\"touchstart\", $feaabd4d71c4e325$var$onJump);\n    document.addEventListener(\"keydown\", $feaabd4d71c4e325$var$onJump);\n    document.addEventListener(\"touchstart\", $feaabd4d71c4e325$var$onJump); // Add touch support for jump\n}\nfunction $feaabd4d71c4e325$export$cbcccfd5966db536(delta, speedScale) {\n    $feaabd4d71c4e325$var$handleRun(delta, speedScale);\n    $feaabd4d71c4e325$var$handleJump(delta);\n}\nfunction $feaabd4d71c4e325$export$9804903a1f2c375f() {\n    return $feaabd4d71c4e325$var$dinoElem.getBoundingClientRect();\n}\nfunction $feaabd4d71c4e325$export$2b61ae596abda39d() {\n    $feaabd4d71c4e325$var$dinoElem.src = \"dino-lose.svg\";\n}\nfunction $feaabd4d71c4e325$var$handleRun(delta, speedScale) {\n    if ($feaabd4d71c4e325$var$isJumping) {\n        $feaabd4d71c4e325$var$dinoElem.src = `dino-stationary.svg`;\n        return;\n    }\n    if ($feaabd4d71c4e325$var$currentFrameTime >= $feaabd4d71c4e325$var$FRAME_TIME) {\n        $feaabd4d71c4e325$var$dinoFrame = ($feaabd4d71c4e325$var$dinoFrame + 1) % $feaabd4d71c4e325$var$DINO_FRAME_COUNT;\n        $feaabd4d71c4e325$var$dinoElem.src = `dino-run-${$feaabd4d71c4e325$var$dinoFrame}.svg`;\n        $feaabd4d71c4e325$var$currentFrameTime -= $feaabd4d71c4e325$var$FRAME_TIME;\n    }\n    $feaabd4d71c4e325$var$currentFrameTime += delta * speedScale;\n}\nfunction $feaabd4d71c4e325$var$handleJump(delta) {\n    if (!$feaabd4d71c4e325$var$isJumping) return;\n    // Set the jumping image\n    $feaabd4d71c4e325$var$dinoElem.src = \"dino-jump.svg\";\n    (0, $519cb4c390022dfc$export$f4266cf9df6b525c)($feaabd4d71c4e325$var$dinoElem, \"--bottom\", $feaabd4d71c4e325$var$yVelocity * delta);\n    if ((0, $519cb4c390022dfc$export$e5f48de68210dc65)($feaabd4d71c4e325$var$dinoElem, \"--bottom\") <= 0) {\n        (0, $519cb4c390022dfc$export$e03ca791698dd2c)($feaabd4d71c4e325$var$dinoElem, \"--bottom\", 0);\n        $feaabd4d71c4e325$var$isJumping = false;\n        // Revert to the running image after jump\n        $feaabd4d71c4e325$var$dinoElem.src = `dino-run-${$feaabd4d71c4e325$var$dinoFrame}.svg`;\n    }\n    $feaabd4d71c4e325$var$yVelocity -= $feaabd4d71c4e325$var$GRAVITY * delta;\n}\nfunction $feaabd4d71c4e325$var$onJump(e) {\n    if (e.code && e.code !== \"Space\" || $feaabd4d71c4e325$var$isJumping) return;\n    // For touch events, prevent triggering multiple times\n    if (e.type === \"touchstart\") e.preventDefault();\n    $feaabd4d71c4e325$var$yVelocity = $feaabd4d71c4e325$var$JUMP_SPEED;\n    $feaabd4d71c4e325$var$isJumping = true;\n}\n\n\n\nconst $8fff22f74d62c3a7$var$SPEED = 0.05;\nconst $8fff22f74d62c3a7$var$CACTUS_INTERVAL_MIN = 800;\nconst $8fff22f74d62c3a7$var$CACTUS_INTERVAL_MAX = 2000;\nconst $8fff22f74d62c3a7$var$worldElem = document.querySelector(\"[data-world]\");\nlet $8fff22f74d62c3a7$var$nextCactusTime;\nfunction $8fff22f74d62c3a7$export$89198fa3f8b2d09f() {\n    $8fff22f74d62c3a7$var$nextCactusTime = $8fff22f74d62c3a7$var$CACTUS_INTERVAL_MIN;\n    document.querySelectorAll(\"[data-cactus]\").forEach((cactus)=>{\n        cactus.remove();\n    });\n}\nfunction $8fff22f74d62c3a7$export$da9e9a822276eb1(delta, speedScale) {\n    document.querySelectorAll(\"[data-cactus]\").forEach((cactus)=>{\n        (0, $519cb4c390022dfc$export$f4266cf9df6b525c)(cactus, \"--left\", delta * speedScale * $8fff22f74d62c3a7$var$SPEED * -1);\n        if ((0, $519cb4c390022dfc$export$e5f48de68210dc65)(cactus, \"--left\") <= -100) cactus.remove();\n    });\n    if ($8fff22f74d62c3a7$var$nextCactusTime <= 0) {\n        $8fff22f74d62c3a7$var$createCactus();\n        $8fff22f74d62c3a7$var$nextCactusTime = $8fff22f74d62c3a7$var$randomNumberBetween($8fff22f74d62c3a7$var$CACTUS_INTERVAL_MIN, $8fff22f74d62c3a7$var$CACTUS_INTERVAL_MAX) / speedScale;\n    }\n    $8fff22f74d62c3a7$var$nextCactusTime -= delta;\n}\nfunction $8fff22f74d62c3a7$export$324ff5de095e53a1() {\n    return [\n        ...document.querySelectorAll(\"[data-cactus]\")\n    ].map((cactus)=>{\n        return cactus.getBoundingClientRect();\n    });\n}\nfunction $8fff22f74d62c3a7$var$createCactus() {\n    const cactus = document.createElement(\"img\");\n    cactus.dataset.cactus = true;\n    cactus.classList.add(\"cactus\");\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)(cactus, \"--left\", 100);\n    $8fff22f74d62c3a7$var$worldElem.append(cactus);\n    // Set initial cactus image\n    cactus.src = \"fire1.svg\"; // Start with fire1.svg\n    // Change cactus image every 250 ms, 4 times per second\n    let imageIndex = 0;\n    const cactusImages = [\n        \"fire1.svg\",\n        \"fire2.svg\",\n        \"fire3.svg\",\n        \"fire4.svg\"\n    ];\n    const cactusImageInterval = setInterval(()=>{\n        cactus.src = cactusImages[imageIndex];\n        imageIndex = (imageIndex + 1) % cactusImages.length; // Cycle through the images\n    }, 250); // Change image every 250ms\n    // Stop the image change when cactus moves off-screen\n    setTimeout(()=>{\n        clearInterval(cactusImageInterval);\n    }, 4000); // Stop after 4 seconds (1 second for each image)\n}\nfunction $8fff22f74d62c3a7$var$randomNumberBetween(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\n\nconst $4e07ab52eff3593b$var$SPEED = 0.05; // Швидкість руху лелек\nconst $4e07ab52eff3593b$var$itemElems = [];\nconst $4e07ab52eff3593b$var$SPAWN_CHANCE = 0.0008; // Зменшена ймовірність появи нової лелеки\nconst $4e07ab52eff3593b$var$FLY_FRAME_TIME = 500; // Час переключення кадрів польоту (в мс)\nfunction $4e07ab52eff3593b$export$2c82fc1c51fe94cc() {\n    $4e07ab52eff3593b$var$itemElems.forEach((item)=>item.remove());\n    $4e07ab52eff3593b$var$itemElems.length = 0;\n}\nfunction $4e07ab52eff3593b$export$c7d78f87941eb2fc(delta, speedScale) {\n    // Оновлення позицій всіх лелек\n    $4e07ab52eff3593b$var$itemElems.forEach((item)=>{\n        (0, $519cb4c390022dfc$export$f4266cf9df6b525c)(item, \"--left\", delta * speedScale * $4e07ab52eff3593b$var$SPEED * -1);\n        if ((0, $519cb4c390022dfc$export$e5f48de68210dc65)(item, \"--left\") <= -10) {\n            item.remove();\n            $4e07ab52eff3593b$var$itemElems.shift();\n        }\n    });\n    // Генерація нової лелеки (тільки один раз)\n    if (Math.random() < delta * $4e07ab52eff3593b$var$SPAWN_CHANCE && $4e07ab52eff3593b$var$itemElems.length === 0) $4e07ab52eff3593b$var$spawnItem();\n}\nfunction $4e07ab52eff3593b$var$spawnItem() {\n    // Створення контейнера для лелеки\n    const item = document.createElement(\"div\");\n    item.classList.add(\"item\");\n    // Встановлюємо початкові властивості (позиції)\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)(item, \"--left\", 100); // Початкова позиція праворуч\n    (0, $519cb4c390022dfc$export$e03ca791698dd2c)(item, \"--bottom\", Math.random() * 20 + 30); // Рандомна висота, більше для \"вищих\" лелек\n    // Додаємо перше зображення лелеки\n    const img = document.createElement(\"img\");\n    img.src = \"leleka1.svg\"; // Перше зображення\n    img.alt = \"Leleka\";\n    // Налаштовуємо розмір лелеки\n    img.style.width = \"auto\";\n    img.style.height = \"200%\"; // Збільшено розмір лелеки\n    img.style.zIndex = \"-1\"; // Розміщуємо лелеку позаду динозавра\n    item.appendChild(img);\n    document.querySelector(\"[data-world]\").append(item);\n    $4e07ab52eff3593b$var$itemElems.push(item);\n    // Запускаємо анімацію польоту\n    $4e07ab52eff3593b$var$animateFlight(img);\n}\nfunction $4e07ab52eff3593b$var$animateFlight(img) {\n    let isFirstFrame = true;\n    // Переключення між зображеннями кожні 500 мс\n    const flightInterval = setInterval(()=>{\n        if (!img.parentElement) {\n            // Зупиняємо анімацію, якщо елемент більше не в DOM\n            clearInterval(flightInterval);\n            return;\n        }\n        img.src = isFirstFrame ? \"leleka2.svg\" : \"leleka1.svg\"; // Перемикаємо кадри\n        isFirstFrame = !isFirstFrame;\n    }, $4e07ab52eff3593b$var$FLY_FRAME_TIME);\n}\n\n\nconst $c1ce9d969bfa6909$var$WORLD_WIDTH = 100;\nconst $c1ce9d969bfa6909$var$WORLD_HEIGHT = 40;\nconst $c1ce9d969bfa6909$var$SPEED_SCALE_INCREASE = 0.00001;\nconst $c1ce9d969bfa6909$var$worldElem = document.querySelector(\"[data-world]\");\nconst $c1ce9d969bfa6909$var$scoreElem = document.querySelector(\"[data-score]\");\nconst $c1ce9d969bfa6909$var$startScreenElem = document.querySelector(\"[data-start-screen]\");\n$c1ce9d969bfa6909$var$setPixelToWorldScale();\nwindow.addEventListener(\"resize\", $c1ce9d969bfa6909$var$setPixelToWorldScale);\ndocument.addEventListener(\"keydown\", $c1ce9d969bfa6909$var$handleStart, {\n    once: true\n});\ndocument.addEventListener(\"touchstart\", $c1ce9d969bfa6909$var$handleStart, {\n    once: true\n});\nlet $c1ce9d969bfa6909$var$lastTime;\nlet $c1ce9d969bfa6909$var$speedScale;\nlet $c1ce9d969bfa6909$var$score;\nfunction $c1ce9d969bfa6909$var$update(time) {\n    if ($c1ce9d969bfa6909$var$lastTime == null) {\n        $c1ce9d969bfa6909$var$lastTime = time;\n        window.requestAnimationFrame($c1ce9d969bfa6909$var$update);\n        return;\n    }\n    const delta = time - $c1ce9d969bfa6909$var$lastTime;\n    (0, $c37474b915fc53e3$export$1fc9a0611b84a598)(delta, $c1ce9d969bfa6909$var$speedScale);\n    (0, $feaabd4d71c4e325$export$cbcccfd5966db536)(delta, $c1ce9d969bfa6909$var$speedScale);\n    (0, $8fff22f74d62c3a7$export$da9e9a822276eb1)(delta, $c1ce9d969bfa6909$var$speedScale);\n    $c1ce9d969bfa6909$var$updateSpeedScale(delta);\n    $c1ce9d969bfa6909$var$updateScore(delta);\n    if ($c1ce9d969bfa6909$var$checkLose()) return $c1ce9d969bfa6909$var$handleLose();\n    $c1ce9d969bfa6909$var$lastTime = time;\n    window.requestAnimationFrame($c1ce9d969bfa6909$var$update);\n}\nfunction $c1ce9d969bfa6909$var$checkLose() {\n    const dinoRect = (0, $feaabd4d71c4e325$export$9804903a1f2c375f)();\n    return (0, $8fff22f74d62c3a7$export$324ff5de095e53a1)().some((rect)=>$c1ce9d969bfa6909$var$isCollision(rect, dinoRect));\n}\nfunction $c1ce9d969bfa6909$var$isCollision(rect1, rect2) {\n    return rect1.left < rect2.right && rect1.top < rect2.bottom && rect1.right > rect2.left && rect1.bottom > rect2.top;\n}\nfunction $c1ce9d969bfa6909$var$updateSpeedScale(delta) {\n    (0, $4e07ab52eff3593b$export$c7d78f87941eb2fc)(delta, $c1ce9d969bfa6909$var$speedScale);\n    $c1ce9d969bfa6909$var$speedScale += delta * $c1ce9d969bfa6909$var$SPEED_SCALE_INCREASE;\n}\nlet $c1ce9d969bfa6909$var$bestScore = 0;\nfunction $c1ce9d969bfa6909$var$updateScore(delta) {\n    $c1ce9d969bfa6909$var$score += delta * 0.01;\n    $c1ce9d969bfa6909$var$scoreElem.textContent = `Score: ${Math.floor($c1ce9d969bfa6909$var$score)} | Best: ${Math.floor($c1ce9d969bfa6909$var$bestScore)}`;\n}\nfunction $c1ce9d969bfa6909$var$handleStart() {\n    $c1ce9d969bfa6909$var$lastTime = null;\n    $c1ce9d969bfa6909$var$speedScale = 1;\n    if ($c1ce9d969bfa6909$var$score > $c1ce9d969bfa6909$var$bestScore) $c1ce9d969bfa6909$var$bestScore = $c1ce9d969bfa6909$var$score;\n    $c1ce9d969bfa6909$var$score = 0;\n    (0, $4e07ab52eff3593b$export$2c82fc1c51fe94cc)();\n    (0, $c37474b915fc53e3$export$62c7cf436fdb9795)();\n    (0, $feaabd4d71c4e325$export$8ddafcef54881f96)();\n    (0, $8fff22f74d62c3a7$export$89198fa3f8b2d09f)();\n    $c1ce9d969bfa6909$var$startScreenElem.classList.add(\"hide\");\n    // Remove touch listener to prevent multiple triggers\n    document.removeEventListener(\"touchstart\", $c1ce9d969bfa6909$var$handleStart);\n    document.removeEventListener(\"keydown\", $c1ce9d969bfa6909$var$handleStart);\n    window.requestAnimationFrame($c1ce9d969bfa6909$var$update);\n}\nfunction $c1ce9d969bfa6909$var$handleLose() {\n    (0, $feaabd4d71c4e325$export$2b61ae596abda39d)(); // Assuming this function handles the game-over state of the dino\n    $c1ce9d969bfa6909$var$startScreenElem.textContent = `Game Over`;\n    $c1ce9d969bfa6909$var$startScreenElem.classList.remove(\"hide\");\n    $c1ce9d969bfa6909$var$startScreenElem.classList.add(\"game-over\");\n    // Ensure the \"Game Over\" screen is centered\n    $c1ce9d969bfa6909$var$startScreenElem.style.top = \"50%\";\n    $c1ce9d969bfa6909$var$startScreenElem.style.left = \"50%\";\n    $c1ce9d969bfa6909$var$startScreenElem.style.transform = \"translate(-50%, -50%)\";\n    $c1ce9d969bfa6909$var$startScreenElem.style.fontSize = \"7vw\"; // Make sure the font size is scalable\n    // Reattach the event listener after the game over\n    document.addEventListener(\"keydown\", $c1ce9d969bfa6909$var$handleStart, {\n        once: true\n    });\n    document.addEventListener(\"touchstart\", $c1ce9d969bfa6909$var$handleStart, {\n        once: true\n    });\n}\nfunction $c1ce9d969bfa6909$var$setPixelToWorldScale() {\n    let worldToPixelScale;\n    if (window.innerWidth / window.innerHeight < $c1ce9d969bfa6909$var$WORLD_WIDTH / $c1ce9d969bfa6909$var$WORLD_HEIGHT) worldToPixelScale = window.innerWidth / $c1ce9d969bfa6909$var$WORLD_WIDTH;\n    else worldToPixelScale = window.innerHeight / $c1ce9d969bfa6909$var$WORLD_HEIGHT;\n    $c1ce9d969bfa6909$var$worldElem.style.width = `${$c1ce9d969bfa6909$var$WORLD_WIDTH * worldToPixelScale}px`;\n    $c1ce9d969bfa6909$var$worldElem.style.height = `${$c1ce9d969bfa6909$var$WORLD_HEIGHT * worldToPixelScale}px`;\n}\n\n\n//# sourceMappingURL=index.b2c19f40.js.map\n","import { updateGround, setupGround } from \"./ground.js\";\nimport { updateDino, setupDino, getDinoRect, setDinoLose } from \"./dino.js\";\nimport { updateCactus, setupCactus, getCactusRects } from \"./cactus.js\";\nimport { setupItems, updateItems } from \"./leleka.js\";\n\nconst WORLD_WIDTH = 100;\nconst WORLD_HEIGHT = 40;\nconst SPEED_SCALE_INCREASE = 0.00001;\n\nconst worldElem = document.querySelector(\"[data-world]\");\nconst scoreElem = document.querySelector(\"[data-score]\");\nconst startScreenElem = document.querySelector(\"[data-start-screen]\");\n\nsetPixelToWorldScale();\nwindow.addEventListener(\"resize\", setPixelToWorldScale);\ndocument.addEventListener(\"keydown\", handleStart, { once: true });\ndocument.addEventListener(\"touchstart\", handleStart, { once: true });\n\nlet lastTime;\nlet speedScale;\nlet score;\nfunction update(time) {\n  if (lastTime == null) {\n    lastTime = time;\n    window.requestAnimationFrame(update);\n    return;\n  }\n  const delta = time - lastTime;\n\n  updateGround(delta, speedScale);\n  updateDino(delta, speedScale);\n  updateCactus(delta, speedScale);\n  updateSpeedScale(delta);\n  updateScore(delta);\n  if (checkLose()) return handleLose();\n\n  lastTime = time;\n  window.requestAnimationFrame(update);\n}\n\nfunction checkLose() {\n  const dinoRect = getDinoRect();\n  return getCactusRects().some((rect) => isCollision(rect, dinoRect));\n}\n\nfunction isCollision(rect1, rect2) {\n  return (\n    rect1.left < rect2.right &&\n    rect1.top < rect2.bottom &&\n    rect1.right > rect2.left &&\n    rect1.bottom > rect2.top\n  );\n}\n\nfunction updateSpeedScale(delta) {\n  updateItems(delta, speedScale);\n\n  speedScale += delta * SPEED_SCALE_INCREASE;\n}\n\nlet bestScore = 0;\n\nfunction updateScore(delta) {\n  score += delta * 0.01;\n  scoreElem.textContent = `Score: ${Math.floor(score)} | Best: ${Math.floor(\n    bestScore\n  )}`;\n}\n\nfunction handleStart() {\n  lastTime = null;\n  speedScale = 1;\n  if (score > bestScore) bestScore = score;\n  score = 0;\n  setupItems();\n  setupGround();\n  setupDino();\n  setupCactus();\n  startScreenElem.classList.add(\"hide\");\n\n  // Remove touch listener to prevent multiple triggers\n  document.removeEventListener(\"touchstart\", handleStart);\n  document.removeEventListener(\"keydown\", handleStart);\n\n  window.requestAnimationFrame(update);\n}\nfunction handleLose() {\n  setDinoLose(); // Assuming this function handles the game-over state of the dino\n  startScreenElem.textContent = `Game Over`;\n  startScreenElem.classList.remove(\"hide\");\n  startScreenElem.classList.add(\"game-over\");\n\n  // Ensure the \"Game Over\" screen is centered\n  startScreenElem.style.top = \"50%\";\n  startScreenElem.style.left = \"50%\";\n  startScreenElem.style.transform = \"translate(-50%, -50%)\";\n  startScreenElem.style.fontSize = \"7vw\"; // Make sure the font size is scalable\n\n  // Reattach the event listener after the game over\n  document.addEventListener(\"keydown\", handleStart, { once: true });\n  document.addEventListener(\"touchstart\", handleStart, { once: true });\n}\n\nfunction setPixelToWorldScale() {\n  let worldToPixelScale;\n  if (window.innerWidth / window.innerHeight < WORLD_WIDTH / WORLD_HEIGHT) {\n    worldToPixelScale = window.innerWidth / WORLD_WIDTH;\n  } else {\n    worldToPixelScale = window.innerHeight / WORLD_HEIGHT;\n  }\n\n  worldElem.style.width = `${WORLD_WIDTH * worldToPixelScale}px`;\n  worldElem.style.height = `${WORLD_HEIGHT * worldToPixelScale}px`;\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from \"./updateCustomProperty.js\";\n\nconst SPEED = 0.05;\nconst groundElems = document.querySelectorAll(\"[data-ground]\");\n\nexport function setupGround() {\n  setCustomProperty(groundElems[0], \"--left\", 0);\n  setCustomProperty(groundElems[1], \"--left\", 300);\n}\n\nexport function updateGround(delta, speedScale) {\n  groundElems.forEach((ground) => {\n    incrementCustomProperty(ground, \"--left\", delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, \"--left\") <= -300) {\n      incrementCustomProperty(ground, \"--left\", 600);\n    }\n  });\n}\n","export function getCustomProperty(elem, prop) {\n  return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0\n}\n\nexport function setCustomProperty(elem, prop, value) {\n  elem.style.setProperty(prop, value)\n}\n\nexport function incrementCustomProperty(elem, prop, inc) {\n  setCustomProperty(elem, prop, getCustomProperty(elem, prop) + inc)\n}\n","import {\n  incrementCustomProperty,\n  setCustomProperty,\n  getCustomProperty,\n} from \"./updateCustomProperty.js\";\n\nconst dinoElem = document.querySelector(\"[data-dino]\");\nconst JUMP_SPEED = 0.45;\nconst GRAVITY = 0.0015;\nconst DINO_FRAME_COUNT = 2;\nconst FRAME_TIME = 100;\n\nlet isJumping;\nlet dinoFrame;\nlet currentFrameTime;\nlet yVelocity;\nexport function setupDino() {\n  isJumping = false;\n  dinoFrame = 0;\n  currentFrameTime = 0;\n  yVelocity = 0;\n  setCustomProperty(dinoElem, \"--bottom\", 0);\n\n  document.removeEventListener(\"keydown\", onJump);\n  document.removeEventListener(\"touchstart\", onJump);\n\n  document.addEventListener(\"keydown\", onJump);\n  document.addEventListener(\"touchstart\", onJump); // Add touch support for jump\n}\n\nexport function updateDino(delta, speedScale) {\n  handleRun(delta, speedScale);\n  handleJump(delta);\n}\n\nexport function getDinoRect() {\n  return dinoElem.getBoundingClientRect();\n}\n\nexport function setDinoLose() {\n  dinoElem.src = \"dino-lose.svg\";\n}\n\nfunction handleRun(delta, speedScale) {\n  if (isJumping) {\n    dinoElem.src = `dino-stationary.svg`;\n    return;\n  }\n\n  if (currentFrameTime >= FRAME_TIME) {\n    dinoFrame = (dinoFrame + 1) % DINO_FRAME_COUNT;\n    dinoElem.src = `dino-run-${dinoFrame}.svg`;\n    currentFrameTime -= FRAME_TIME;\n  }\n  currentFrameTime += delta * speedScale;\n}\n\nfunction handleJump(delta) {\n  if (!isJumping) return;\n\n  // Set the jumping image\n  dinoElem.src = \"dino-jump.svg\";\n\n  incrementCustomProperty(dinoElem, \"--bottom\", yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, \"--bottom\") <= 0) {\n    setCustomProperty(dinoElem, \"--bottom\", 0);\n    isJumping = false;\n\n    // Revert to the running image after jump\n    dinoElem.src = `dino-run-${dinoFrame}.svg`;\n  }\n\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onJump(e) {\n  if ((e.code && e.code !== \"Space\") || isJumping) return;\n\n  // For touch events, prevent triggering multiple times\n  if (e.type === \"touchstart\") {\n    e.preventDefault();\n  }\n\n  yVelocity = JUMP_SPEED;\n  isJumping = true;\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from \"./updateCustomProperty.js\";\n\nconst SPEED = 0.05;\nconst CACTUS_INTERVAL_MIN = 800;\nconst CACTUS_INTERVAL_MAX = 2000;\nconst worldElem = document.querySelector(\"[data-world]\");\n\nlet nextCactusTime;\nexport function setupCactus() {\n  nextCactusTime = CACTUS_INTERVAL_MIN;\n  document.querySelectorAll(\"[data-cactus]\").forEach((cactus) => {\n    cactus.remove();\n  });\n}\n\nexport function updateCactus(delta, speedScale) {\n  document.querySelectorAll(\"[data-cactus]\").forEach((cactus) => {\n    incrementCustomProperty(cactus, \"--left\", delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(cactus, \"--left\") <= -100) {\n      cactus.remove();\n    }\n  });\n\n  if (nextCactusTime <= 0) {\n    createCactus();\n    nextCactusTime =\n      randomNumberBetween(CACTUS_INTERVAL_MIN, CACTUS_INTERVAL_MAX) /\n      speedScale;\n  }\n\n  nextCactusTime -= delta;\n}\n\nexport function getCactusRects() {\n  return [...document.querySelectorAll(\"[data-cactus]\")].map((cactus) => {\n    return cactus.getBoundingClientRect();\n  });\n}\n\nfunction createCactus() {\n  const cactus = document.createElement(\"img\");\n  cactus.dataset.cactus = true;\n  cactus.classList.add(\"cactus\");\n  setCustomProperty(cactus, \"--left\", 100);\n  worldElem.append(cactus);\n\n  // Set initial cactus image\n  cactus.src = \"fire1.svg\"; // Start with fire1.svg\n\n  // Change cactus image every 250 ms, 4 times per second\n  let imageIndex = 0;\n  const cactusImages = [\"fire1.svg\", \"fire2.svg\", \"fire3.svg\", \"fire4.svg\"];\n\n  const cactusImageInterval = setInterval(() => {\n    cactus.src = cactusImages[imageIndex];\n    imageIndex = (imageIndex + 1) % cactusImages.length; // Cycle through the images\n  }, 250); // Change image every 250ms\n\n  // Stop the image change when cactus moves off-screen\n  setTimeout(() => {\n    clearInterval(cactusImageInterval);\n  }, 4000); // Stop after 4 seconds (1 second for each image)\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import {\n  setCustomProperty,\n  getCustomProperty,\n  incrementCustomProperty,\n} from \"./updateCustomProperty.js\";\n\nconst SPEED = 0.05; // Швидкість руху лелек\nconst itemElems = [];\nconst SPAWN_CHANCE = 0.0008; // Зменшена ймовірність появи нової лелеки\nconst FLY_FRAME_TIME = 500; // Час переключення кадрів польоту (в мс)\n\nexport function setupItems() {\n  itemElems.forEach((item) => item.remove());\n  itemElems.length = 0;\n}\n\nexport function updateItems(delta, speedScale) {\n  // Оновлення позицій всіх лелек\n  itemElems.forEach((item) => {\n    incrementCustomProperty(item, \"--left\", delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(item, \"--left\") <= -10) {\n      item.remove();\n      itemElems.shift();\n    }\n  });\n\n  // Генерація нової лелеки (тільки один раз)\n  if (Math.random() < delta * SPAWN_CHANCE && itemElems.length === 0) {\n    spawnItem();\n  }\n}\n\nfunction spawnItem() {\n  // Створення контейнера для лелеки\n  const item = document.createElement(\"div\");\n  item.classList.add(\"item\");\n\n  // Встановлюємо початкові властивості (позиції)\n  setCustomProperty(item, \"--left\", 100); // Початкова позиція праворуч\n  setCustomProperty(item, \"--bottom\", Math.random() * 20 + 30); // Рандомна висота, більше для \"вищих\" лелек\n\n  // Додаємо перше зображення лелеки\n  const img = document.createElement(\"img\");\n  img.src = \"leleka1.svg\"; // Перше зображення\n  img.alt = \"Leleka\";\n\n  // Налаштовуємо розмір лелеки\n  img.style.width = \"auto\";\n  img.style.height = \"200%\"; // Збільшено розмір лелеки\n  img.style.zIndex = \"-1\"; // Розміщуємо лелеку позаду динозавра\n\n  item.appendChild(img);\n  document.querySelector(\"[data-world]\").append(item);\n  itemElems.push(item);\n\n  // Запускаємо анімацію польоту\n  animateFlight(img);\n}\n\nfunction animateFlight(img) {\n  let isFirstFrame = true;\n\n  // Переключення між зображеннями кожні 500 мс\n  const flightInterval = setInterval(() => {\n    if (!img.parentElement) {\n      // Зупиняємо анімацію, якщо елемент більше не в DOM\n      clearInterval(flightInterval);\n      return;\n    }\n\n    img.src = isFirstFrame ? \"leleka2.svg\" : \"leleka1.svg\"; // Перемикаємо кадри\n    isFirstFrame = !isFirstFrame;\n  }, FLY_FRAME_TIME);\n}\n"],"names":["$feaabd4d71c4e325$var$isJumping","$feaabd4d71c4e325$var$dinoFrame","$feaabd4d71c4e325$var$currentFrameTime","$feaabd4d71c4e325$var$yVelocity","$8fff22f74d62c3a7$var$nextCactusTime","$c1ce9d969bfa6909$var$lastTime","$c1ce9d969bfa6909$var$speedScale","$c1ce9d969bfa6909$var$score","$519cb4c390022dfc$export$e5f48de68210dc65","elem","prop","parseFloat","getComputedStyle","getPropertyValue","$519cb4c390022dfc$export$e03ca791698dd2c","value","style","setProperty","$519cb4c390022dfc$export$f4266cf9df6b525c","inc","$c37474b915fc53e3$var$groundElems","document","querySelectorAll","$feaabd4d71c4e325$var$dinoElem","querySelector","$feaabd4d71c4e325$var$onJump","e","code","type","preventDefault","$8fff22f74d62c3a7$var$worldElem","$4e07ab52eff3593b$var$itemElems","$c1ce9d969bfa6909$var$worldElem","$c1ce9d969bfa6909$var$scoreElem","$c1ce9d969bfa6909$var$startScreenElem","$c1ce9d969bfa6909$var$update","time","speedScale","delta","window","requestAnimationFrame","forEach","ground","$feaabd4d71c4e325$var$handleRun","src","$feaabd4d71c4e325$var$GRAVITY","cactus","remove","$8fff22f74d62c3a7$var$createCactus","createElement","dataset","classList","add","append","imageIndex","cactusImages","cactusImageInterval","setInterval","length","setTimeout","clearInterval","$8fff22f74d62c3a7$var$randomNumberBetween","Math","floor","max","random","item","shift","$4e07ab52eff3593b$var$spawnItem","img","alt","width","height","zIndex","appendChild","push","$4e07ab52eff3593b$var$animateFlight","isFirstFrame","flightInterval","parentElement","textContent","$c1ce9d969bfa6909$var$bestScore","$c1ce9d969bfa6909$var$checkLose","dinoRect","getBoundingClientRect","map","some","rect","rect1","left","rect2","right","top","bottom","transform","fontSize","addEventListener","$c1ce9d969bfa6909$var$handleStart","once","$c1ce9d969bfa6909$var$setPixelToWorldScale","removeEventListener","worldToPixelScale","innerWidth","innerHeight","$c1ce9d969bfa6909$var$WORLD_WIDTH","$c1ce9d969bfa6909$var$WORLD_HEIGHT"],"version":3,"file":"index.b2c19f40.js.map"}